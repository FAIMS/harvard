/************************** CREATE NEW TRENCH BUTTON **************************/

// Overrrides autogenerated definition
void onClickSiteSiteTrenches() {
  String tabgroup = "Site";
  if (isNull(getUuid(tabgroup))){
    showToast("{You_must_save_this_tabgroup_first}");
    return;
  }
  parentTabgroup   = tabgroup;
  parentTabgroup__ = tabgroup;
  tryCreateNewTrench();
}

void tryCreateNewTrench () {
  String parentUuid = getUuid(getDisplayedTabGroup());
  String trenchId   = getFieldValue("Site/Site/Trench_ID");

  String q = "";
  q += "SELECT childuuid, response ";
  q += "  FROM parentchild ";
  q += "  JOIN latestNonDeletedArchEntFormattedIdentifiers ON (childuuid = uuid) ";
  q += "  JOIN createdmodifiedatby USING (uuid) ";
  q += " WHERE relationshipid IN (SELECT relationshipid  ";
  q += "                            FROM latestnondeletedrelationship JOIN relntype USING (relntypeid) ";
  q += "                           WHERE relntypename = 'Site - Trench') ";
  q += "   AND parentuuid = '" + parentUuid + "' ";
  q += "   AND (childaenttypename = 'Trench') ";
  q += "   AND childuuid IN (";
  q += "           SELECT uuid";
  q += "             FROM latestnondeletedaentvalue";
  q += "             JOIN attributekey USING (attributeid)";
  q += "            WHERE attributename = 'Trench Trench ID'";
  q += "              AND measure = '" + trenchId + "')";

  FetchCallback callback = new FetchCallback() {
    onFetch(result) {
      if      (result        == null) newTrench();
      else if (result.size() == 0   ) newTrench();
      else                            confirmNewTrench();
    }
  };

  fetchAll(q, callback);
}

void confirmNewTrench() {
  String head  = "{trench_already_exists_head}";
  String body  = "{trench_already_exists_body}";
  String cbOk  = "";
  String cbBad = "newTrench()";

  showAlert(head, body, cbOk, cbBad);
}
