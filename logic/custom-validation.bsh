/***************************** CUSTOM VALIDATION ******************************/

String getName(String ref, String defaultName) {
  String refOri = "Context/Cut/Orientation_Degree";

  if (ref.equals(refOri))
    return defaultName + " {Must_be_between_0_0_and_90_0}";

  return defaultName;
}

String getCond(String ref, String defaultCond) {
  String refTab  = getTabRef(ref);

  if (refTab.equals("Context/Cut"      ))
    return "isSelected(\"Context/General/Context_Type\", \"{Cut}\")";
  if (refTab.equals("Context/Deposit"  ))
    return "isSelected(\"Context/General/Context_Type\", \"{Deposit}\")" +
      " ||  isSelected(\"Context/General/Context_Type\", \"{Natural}\")";
  if (refTab.equals("Context/Skeleton" ))
    return "isSelected(\"Context/General/Context_Type\", \"{Skeleton}\")";
  if (refTab.equals("Context/Structure"))
    return "isSelected(\"Context/General/Context_Type\", \"{Construction}\")";

  if (ref.equals("Context_Group/Gen/Feature_Prefix"))
    return "isSelected(\"Context_Group/Gen/Record_Type\", \"{Feature}\")";

  return defaultCond;
}

// Overrides autogenerated definition
boolean isValidField(String ref) {
  String refOri = "Context/Cut/Orientation_Degree";
  if (!ref.equals(refOri))
    return !isNull(getFieldValue(ref)); // Do blank check

  // Do range check
  String val = getFieldValue(refOri);
  double dblVal;
  try {
    dblVal = Double.parseDouble(val);
  } catch(NumberFormatException e) {
    dblVal = -1.0;
  }

  double fltMin =  0.0;
  double fltMax = 90.0;

  return dblVal >= fltMin &&
         dblVal <= fltMax;
}

// Overrides autogenerated definition
List fieldPair(String ref, String name, String cond) {
  String refOri = "Context/Cut/Orientation_Degree";

  name = getName(ref, name);
  cond = getCond(ref, cond);

  List fp = new ArrayList();
  fp.add(ref);
  fp.add(name);
  fp.add(cond);

  return fp;
}
