/***************************** CUSTOM VALIDATION ******************************/

String getName(String ref, String defaultName) {
  String refOri = "Locus/Cut/Orientation_Degree";

  if (ref.equals(refOri))
    return defaultName + " {Must_be_between_0_0_and_90_0}";

  return defaultName;
}

String getCond(String ref, String defaultCond) {
  String refTab  = getTabRef(ref);

  if (refTab.equals("Locus/Cut"      ))
    return "isSelected(\"Locus/General/Locus_Type\", \"{Cut}\")";
  if (refTab.equals("Locus/Deposit"  ))
    return "isSelected(\"Locus/General/Locus_Type\", \"{Deposit}\")" +
      " ||  isSelected(\"Locus/General/Locus_Type\", \"{Natural}\")";
  if (refTab.equals("Locus/Skeleton" ))
    return "isSelected(\"Locus/General/Locus_Type\", \"{Skeleton}\")";
  if (refTab.equals("Locus/Construction"))
    return "isSelected(\"Locus/General/Locus_Type\", \"{Construction}\")";

  if (ref.equals("Stratum_Feature/General/Feature_Prefix"))
    return "isSelected(\"Stratum_Feature/General/Record_Type\", \"{Feature}\")";

  return defaultCond;
}

// Overrides autogenerated definition
boolean isValidField(String ref) {
  if (ref.equals("Site/Site/Trench_ID"))
    return isValidTrenchId();

  String refOri = "Locus/Cut/Orientation_Degree";
  if (ref.equals(refOri)) {
    // Do range check
    String val = getFieldValue(refOri);
    double dblVal;
    try {
      dblVal = Double.parseDouble(val);
    } catch(NumberFormatException e) {
      dblVal = -1.0;
    }

    double fltMin =  0.0;
    double fltMax = 90.0;

    return dblVal >= fltMin &&
           dblVal <= fltMax;
  }

  return !isNull(getFieldValue(ref)); // Do blank check
}

// Overrides autogenerated definition
List fieldPair(String ref, String name, String cond) {
  String refOri = "Locus/Cut/Orientation_Degree";

  name = getName(ref, name);
  cond = getCond(ref, cond);

  List fp = new ArrayList();
  fp.add(ref);
  fp.add(name);
  fp.add(cond);

  return fp;
}
