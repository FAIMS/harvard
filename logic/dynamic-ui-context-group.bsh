/************************* DYNAMIC UI - CONTEXT GROUP *************************/
addOnEvent("Context_Group/Gen/Record_Type", "click", "updateFeatureType()");

// Prefetch this vocab seeing as it will be dynamically loaded multiple times
// throughout the module's runtime.
FEATURE_TYPE_VOCAB = new ArrayList();
fetchVocab("Feature Type", FEATURE_TYPE_VOCAB);

void updateFeatureType() {
  String ref       = "Context_Group/Gen/Record_Type";
  String vocabName = getMenuValue(ref);

  if (vocabName == null            ) return;
  if (vocabName.equals("{Stratum}")) hideFeatureType();
  if (vocabName.equals("{Feature}")) showFeatureType();
}

void hideFeatureType() {
  String uuid           = getUuid("Context_Group");
  String refView        = "Context_Group/Gen/Feature_Type";
  String attribName     = getAttributeName(refView);

  if (!hasView(refView)) return;

  // Before removing the view, we get the value of the Feature Type field, which
  // is used to determine if Feature Type should be flagged as `deleted`.
  String featureTypeVal = getFieldValue(refView);
  removeView(refView);

  if (isNull(featureTypeVal)) return;

  // Flag Feature Type as `deleted`.
  q  = " INSERT INTO aentvalue (UUID, UserID, AttributeID, Deleted)";
  q += " SELECT '{uuid}', {userid}, attributeid, 1";
  q += " FROM  attributekey";
  q += " WHERE attributename = '{attributename}'";
  q  = replaceFirst(q, "{uuid}", uuid);
  q  = replaceFirst(q, "{userid}", userid);
  q  = replaceFirst(q, "{attributename}", attribName);

  fetchOne(q);
}

void showFeatureType() {
  String refView  = "Context_Group/Gen/Feature_Type";
  String refGroup = "Context_Group/Gen/Feature_Type_Group";

  if (hasView(refView)) return;

  String label      = getArch16nVal(refView);
  String attribName = getAttributeName(refView);

  // Create view
  FormInputDef viewDef = createViewDef();
  viewDef.createDropDown      ();
  viewDef.setLabel            (label);
  viewDef.setAttributeName    (attribName);
  viewDef.setAttributeType    ("vocab");
  viewDef.setAnnotationEnabled(true);
  viewDef.setCertaintyEnabled (true);
  viewDef.setInfoEnabled      (true);

  createView(refView, viewDef, refGroup);

  // Populate view
  Boolean hasNull = true;
  populateDropDown(refView, FEATURE_TYPE_VOCAB, hasNull);
}

// TODO: Introduce a "pre-fetch" event to bind "showFeatureType()"?
// Overrides autogenerated definition
void loadContextGroupFrom(String uuid) {
  String tabgroup = "Context_Group";
  setUuid(tabgroup, uuid);
  if (isNull(uuid)) return;

  FetchCallback updateUi = new FetchCallback() {
    onFetch(result) {
      updateFeatureType();
    }
  };

  showFeatureType();
  showTabGroup(tabgroup, uuid, updateUi);
}
