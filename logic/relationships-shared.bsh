/******************************* RELATIONSHIPS ********************************/
/* Variables and functions shared by entity-specfic code fo relating          */
/* entities.                                                                  */
/******************************************************************************/
addOnEvent("Locus",                    "show", "onDisplayParent()");
addOnEvent("Relationship",               "show", "onDisplayRelationship()");
addOnEvent("Stratum_Feature",              "show", "CGonDisplayParent()");
addOnEvent("Stratum_Feature_Relationship", "show", "CGonDisplayRelationship()");

String WEB_REL_DESC_FMT      = "%s <u>&nbsp;%s&nbsp;</u> <u>&nbsp;%s&nbsp;</u>";
String WEB_REL_DESC_FILL     = "?";
String WEB_REL_BLANK         = "&nbsp;";

String selectedRelId         = null;
String selectedRelIdentifier = null;
String selectedChildUuid     = null;

String proposedChildUuid       = null;
String proposedChildIdentifier = null;

String displayedTabGroup     = null;

void onDisplayParent()            {displayedTabGroup = "Locus";}
void onDisplayRelationship()      {displayedTabGroup = "Relationship";}
boolean isDisplayedParent()       {return displayedTabGroup.equals("Locus");}
boolean isDisplayedRelationship() {return displayedTabGroup.equals("Relationship");}

void CGonDisplayParent()            {displayedTabGroup = "Stratum_Feature";}
void CGonDisplayRelationship()      {displayedTabGroup = "Stratum_Feature_Relationship";}
boolean CGisDisplayedParent()       {return displayedTabGroup.equals("Stratum_Feature");}
boolean CGisDisplayedRelationship() {return displayedTabGroup.equals("Stratum_Feature_Relationship");}

// Depends on the following globals:
//   - selectedRelId
//   - userId        (Defined by autogen)
void deleteRelationship() {
  if (isNull(selectedRelId)) {
    showToast("{no_relationship_selected}");
    return;
  }

  String q = "";
  q += " INSERT INTO aentreln (uuid, relationshipid, deleted, participatesverb, userid)";
  q += " SELECT uuid, relationshipid, 'true', participatesverb, '"+userId+"'";
  q += " FROM latestnondeletedaentreln";
  q += " WHERE relationshipid = '"+selectedRelId+"'";

  DeleteCallback cb = new DeleteCallback() {
    onDelete(uuid) {
      deleteRelationshipSuceeded();
    }
  };

  fetchOne(q);
  deleteRel(selectedRelId, cb);

  selectedRelId         = null;
  selectedRelIdentifier = null;
}

void deleteRelationshipSuceeded() {
  String refSelectedRelRel    = "Relationship/Relationships/Selected_Relationship";
  String refSelectedRelParent = "Locus/Relationships/Selected_Relationship";
  if (isDisplayedParent()) {
    populateWebViewHtml(refSelectedRelParent, WEB_REL_NONE);
    populateExistingRelationships();
  }
  if (isDisplayedRelationship()) {
    populateWebViewHtml(refSelectedRelRel,    WEB_REL_NONE);
    searchRelationship();
  }

  String CGrefSelectedRelRel    = "Stratum_Feature_Relationship/Relationships/Selected_Relationship";
  String CGrefSelectedRelParent = "Stratum_Feature/Stratum_Feature_Loci/Selected_Relationship";
  if (CGisDisplayedParent()) {
    populateWebViewHtml(CGrefSelectedRelParent, WEB_REL_NONE);
    CGpopulateExistingRelationships();
  }
  if (CGisDisplayedRelationship()) {
    populateWebViewHtml(CGrefSelectedRelRel,    WEB_REL_NONE);
    CGsearchRelationship();
  }
}

String getSelectedRelationshipComponent(String ref, String component) {
  String   val       = getFieldValue(ref);
  String[] arguments = null;
  if (val == null)
      return null;
  else
      arguments = val.split("~!~");

  String   relationshipName = arguments[0];
  String   parentRole       = arguments[1];
  String   childRole        = arguments[2];

  component = component.toLowerCase();
  if      (component.equals("name"))   return relationshipName;
  else if (component.equals("parent")) return parentRole;
  else if (component.equals("child"))  return childRole;
  else                                 return null;
}

void loadRelatedEntity() {
  if (isNull(selectedChildUuid)) {
    showToast("{no_relationship_selected}");
    return;
  }
  loadEntityFrom(selectedChildUuid);
}
